
a[22050] - number of coefficients (coefficients change every 9, 2450 unique values memory could be lowered)

INTERFACES:
input_in - 16bit 
on_in - 1bit
output_out -16bit

ROUGH ALGORITHM

a[22050] //modulated coefficients for half a second (coefficients change every 9, 2450 unique values memory could be lowered)

if(on_in == '1')
{	
	k = 0;
	up = true;
	PrevInVal = 0;
	PrevMidVal = 0;
	PrevOutVal = 0;
}
else
{ 
	while(on_in == '1')
	{
		input = input_in
		if(up == true)
		{
			k = k + 1;
			if(k == 22050)
			{
				up == false;
			}
		}
		else	
		{
			k = k - 1;
			if(k == 0)
			{
				up == true;
			}
		}

		MidVal = a[k]*input + PrevInVal - a[k]*PrevMidVal;

		output = a[k]*MidVal + PrevMidVal - a[k]*PrevOutVal;

		PrevInVal = input;
		PrevMidVal = MidVal;
		PrevOutVal = output;

		output_out = output;			
	}
}


ALGORITHM WITHOUT LOOPS

if(on_in == '0')
{	
	k = 0;
	up = true;
	a
}
else
{ 
	INS: input = input_in
	if(up == true)
	{
		k = k + 1;
		if(k == 22050)
		{
			up == false;
		}
	}
	else	
	{
		k = k - 1;
		if(k == 0)
		{
			up == true;
		}
	}

	MidVal = a[k]*input + PrevInVal - a[k]*PrevMidVal;

	output = a[k]*MidVal + PrevMidVal - a[k]*PrevOutVal;

	PrevInVal = input;
	PrevMidVal = MidVal;
	PrevOutVal = output;
	
`	output_out = output + input;

	if(on_in = '1')
	{
		goto INS;
	}
	else
	{
		goto STOP;
	}			
	STOP:
}